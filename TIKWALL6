### TIKWALL6 Script Bundle
/system script
add comment="TIKWALL for IPv6 Initial preparation step: Create/Enable MINFWALL rules. They allow minimal set of incoming traffic (SSH, but can be configured further) and all o\
    utgoing traffic, but block forwarding until the rest of the firewall is loaded." name=TIKWALL6_0_MINFWALL policy=read,write source="#######################################\
    ########################################\
    \n# TIKWALL6 v. 0.1\
    \n# Project home: https://github.com/atsonkov/tikwall\
    \n###############################################################################\
    \n# Copyright 2015 Atanas Tsonkov\
    \n# Licensed under the Apache License, Version 2.0 (the \"License\");\
    \n# you may not use this file except in compliance with the License.\
    \n# You may obtain a copy of the License at\
    \n#   http://www.apache.org/licenses/LICENSE-2.0\
    \n# Unless required by applicable law or agreed to in writing, software\
    \n# distributed under the License is distributed on an \"AS IS\" BASIS,\
    \n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\
    \n# See the License for the specific language governing permissions and\
    \n# limitations under the License.\
    \n###############################################################################\
    \n\
    \n:global minfwRules do={\
    \n######\
    \n### User configurable section\
    \n\
    \n#Allowed incoming traffic (Default: SSH\
    \n  /ipv6 firewall filter add chain=TIKWALL_MINFW_IN dst-port=22 protocol=tcp action=accept\
    \n\
    \n#Allowed outgoing traffic (Default: all)\
    \n  /ipv6 firewall filter add chain=TIKWALL_MINFW_OUT action=accept\
    \n\
    \n### End of user configurable section\
    \n######\
    \n}\
    \n\
    \n:global checkSafeMode do={\
    \n  :if ([/system script find name=\"TIKWALL_SAFEMODE_TEST\"]!=\"\") do={\
    \n    #SAFEMODE_TEST exists. Removing...\
    \n    /system script remove TIKWALL_SAFEMODE_TEST\
    \n  };\
    \n\
    \n  #Creating SAFEMODE_TEST.\
    \n  /system script add name=\"TIKWALL_SAFEMODE_TEST\"\
    \n  /system script remove TIKWALL_SAFEMODE_TEST\
    \n  :if ( [/system history find floating-undo] != \"\" ) do={\
    \n    return [:tobool true]\
    \n  } else={\
    \n    return [:tobool false]\
    \n  }\
    \n}\
    \n\
    \n:if ( [\$checkSafeMode] != [:tobool true] ) do={\
    \n  :put \"This script is supposed to be run in SAFE MODE. Please press Ctrl+X and run it again!\"\
    \n} else={\
    \n  # Looks like we are in safe mode. Good!\
    \n\
    \n  # Make backup of current IPv6 firewall to file\
    \n  /ipv6 firewall filter export file=TIKWALL_Backup\
    \n\
    \n  # Cleanup previous MINFWALL\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_IN  ] do={ /ipv6 firewall filter remove \$rule };\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_OUT ] do={ /ipv6 firewall filter remove \$rule };\
    \n  # Delete all rules inside MINFWALL chain\
    \n  :foreach rule in=[ /ipv6 firewall filter find chain=TIKWALL_MINFW_IN  ] do={ /ipv6 firewall filter remove \$rule };\
    \n  :foreach rule in=[ /ipv6 firewall filter find chain=TIKWALL_MINFW_OUT ] do={ /ipv6 firewall filter remove \$rule };\
    \n  # At this point even if there was MINFWALL chain, it should have been cleaned up. Creating the rules we need.\
    \n  do {\
    \n    /ipv6 firewall filter add place-before=0 disabled=yes chain=output action=jump jump-target=TIKWALL_MINFW_OUT\
    \n  } on-error={\
    \n    # No other rules in output chain\? Adding it without place-before=0\
    \n    /ipv6 firewall filter add disabled=yes chain=output action=jump jump-target=TIKWALL_MINFW_OUT\
    \n  }\
    \n  do {\
    \n    /ipv6 firewall filter add place-before=0 disabled=yes chain=input  action=jump jump-target=TIKWALL_MINFW_IN\
    \n  } on-error={\
    \n    # No other rules in input chain\? Adding it without place-before=0\
    \n    /ipv6 firewall filter add disabled=yes chain=input  action=jump jump-target=TIKWALL_MINFW_IN\
    \n  }\
    \n  # Create the necessary rules inside MINFWALL\
    \n  \$minfwRules\
    \n  # Enable Input -> MINFWALL\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_IN  ] do={ /ipv6 firewall filter set \$rule disabled=no };\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_OUT ] do={ /ipv6 firewall filter set \$rule disabled=no };\
    \n\
    \n  :put \"Please leave safe mode before running TIKWALL6_1_PREPARE\"\
    \n}\
    \n\
    \n:set checkSafeMode"
add comment="TIKWALL for IPv6 Preparation step: Remove all rules except the MINFWALL ones. Define all necessary Firewall rules according to the configuration." name=\
    TIKWALL6_1_PREPARE policy=read,write source="###############################################################################\
    \n# TIKWALL v. 0.1\
    \n# Project home: https://github.com/atsonkov/tikwall\
    \n###############################################################################\
    \n# Copyright 2015 Atanas Tsonkov\
    \n# Licensed under the Apache License, Version 2.0 (the \"License\");\
    \n# you may not use this file except in compliance with the License.\
    \n# You may obtain a copy of the License at\
    \n#   http://www.apache.org/licenses/LICENSE-2.0\
    \n# Unless required by applicable law or agreed to in writing, software\
    \n# distributed under the License is distributed on an \"AS IS\" BASIS,\
    \n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\
    \n# See the License for the specific language governing permissions and\
    \n# limitations under the License.\
    \n###############################################################################\
    \n\
    \n:global checkSafeMode do={\
    \n  :if ([/system script find name=\"TIKWALL_SAFEMODE_TEST\"]!=\"\") do={\
    \n    #SAFEMODE_TEST exists. Removing...\
    \n    /system script remove TIKWALL_SAFEMODE_TEST\
    \n  };\
    \n\
    \n  #Creating SAFEMODE_TEST.\
    \n  /system script add name=\"TIKWALL_SAFEMODE_TEST\"\
    \n  /system script remove TIKWALL_SAFEMODE_TEST\
    \n  :if ( [/system history find floating-undo] != \"\" ) do={\
    \n    return [:tobool true]\
    \n  } else={\
    \n    return [:tobool false]\
    \n  }\
    \n}\
    \n\
    \n:if ( [\$checkSafeMode] != [:tobool false] ) do={\
    \n  :put \"This script is NOT supposed to be run in SAFE MODE. Please press Ctrl+X and run it again!\"\
    \n} else={\
    \n  # Looks like we are NOT in safe mode. Good!\
    \n\
    \n  # Delete all rules except MINFWALL related ones\
    \n  :foreach rule in=[ /ipv6 firewall filter find ] do={\
    \n    if ( ([/ipv6 firewall filter get \$rule jump-target] != \"TIKWALL_MINFW_IN\" ) && \\\
    \n         ([/ipv6 firewall filter get \$rule jump-target] != \"TIKWALL_MINFW_OUT\") && \\\
    \n         ([/ipv6 firewall filter get \$rule chain]       != \"TIKWALL_MINFW_IN\" ) && \\\
    \n         ([/ipv6 firewall filter get \$rule chain]       != \"TIKWALL_MINFW_OUT\") ) do={\
    \n      /ipv6 firewall filter remove \$rule\
    \n    }\
    \n  };\
    \n\
    \n  :put \"Please enter safe mode before running TIKWALL6_2_ACTIVATE\"\
    \n}\
    \n\
    \n:set checkSafeMode"
add comment="TIKWALL for IPv6 Activation: Activate the Firewall prepared in the previous steps, by removing the MINFWALL rules." name=TIKWALL6_2_ACTIVATE policy=read,write \
    source="###############################################################################\
    \n# TIKWALL v. 0.1\
    \n# Project home: https://github.com/atsonkov/tikwall\
    \n###############################################################################\
    \n# Copyright 2015 Atanas Tsonkov\
    \n# Licensed under the Apache License, Version 2.0 (the \"License\");\
    \n# you may not use this file except in compliance with the License.\
    \n# You may obtain a copy of the License at\
    \n#   http://www.apache.org/licenses/LICENSE-2.0\
    \n# Unless required by applicable law or agreed to in writing, software\
    \n# distributed under the License is distributed on an \"AS IS\" BASIS,\
    \n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\
    \n# See the License for the specific language governing permissions and\
    \n# limitations under the License.\
    \n###############################################################################\
    \n\
    \n:global checkSafeMode do={\
    \n  :if ([/system script find name=\"TIKWALL_SAFEMODE_TEST\"]!=\"\") do={\
    \n    #SAFEMODE_TEST exists. Removing...\
    \n    /system script remove TIKWALL_SAFEMODE_TEST\
    \n  };\
    \n\
    \n  #Creating SAFEMODE_TEST.\
    \n  /system script add name=\"TIKWALL_SAFEMODE_TEST\"\
    \n  /system script remove TIKWALL_SAFEMODE_TEST\
    \n  :if ( [/system history find floating-undo] != \"\" ) do={\
    \n    return [:tobool true]\
    \n  } else={\
    \n    return [:tobool false]\
    \n  }\
    \n}\
    \n\
    \n:if ( [\$checkSafeMode] != [:tobool true] ) do={\
    \n  :put \"This script is supposed to be run in SAFE MODE. Please press Ctrl+X and run it again!\"\
    \n} else={\
    \n  # Looks like we are in safe mode. Good!\
    \n\
    \n  # Cleanup MINFWALL part\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_IN  ] do={ /ipv6 firewall filter remove \$rule };\
    \n  :foreach rule in=[ /ipv6 firewall filter find jump-target=TIKWALL_MINFW_OUT ] do={ /ipv6 firewall filter remove \$rule };\
    \n  # Delete all rules inside MINFWALL chain\
    \n  :foreach rule in=[ /ipv6 firewall filter find chain=TIKWALL_MINFW_IN  ] do={ /ipv6 firewall filter remove \$rule };\
    \n  :foreach rule in=[ /ipv6 firewall filter find chain=TIKWALL_MINFW_OUT ] do={ /ipv6 firewall filter remove \$rule };\
    \n  # At this point even if there was MINFWALL chain, it should have been cleaned up.\
    \n  :put \"Your TIKWALL6 is now active.\"\
    \n}\
    \n\
    \n:set checkSafeMode"
add comment="TIKWALL for IPv6 Initialize step: Create initial configuration (or reconfigure to the default configuration) that could be customized later." name=TIKWALL6_INIT \
    policy=read,write source="###############################################################################\
    \n# TIKWALL6 v. 0.1\
    \n# Project home: https://github.com/atsonkov/tikwall\
    \n###############################################################################\
    \n# Copyright 2015 Atanas Tsonkov\
    \n# Licensed under the Apache License, Version 2.0 (the \"License\");\
    \n# you may not use this file except in compliance with the License.\
    \n# You may obtain a copy of the License at\
    \n#   http://www.apache.org/licenses/LICENSE-2.0\
    \n# Unless required by applicable law or agreed to in writing, software\
    \n# distributed under the License is distributed on an \"AS IS\" BASIS,\
    \n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\
    \n# See the License for the specific language governing permissions and\
    \n# limitations under the License.\
    \n###############################################################################\
    \n\
    \n# It should create the initial TIKWALL6_0_MINFWALL_CUSTOM and TIKWALL6_1_BUILD_CUSTOM"
